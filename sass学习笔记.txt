----------------------附------------------------
二十三,SASS (css的框架，方便我们复用css代码)

a)支持变量方式,存取变量和计算
/*scss代码
$blue: #3bbfce;
$margin: 16px;

.content-navigation {
  border-color: $blue;
  color:
    darken($blue, 9%);
}

.border {
  padding: $margin / 2;
  margin: $margin / 2;
  border-color: $blue;
}
*/
#变量还可以用作字符串，和#{}配合使用，类似ruby
$side = top;
#fuck {border-#{$side}-color: orange;}

b)支持结构嵌套
/*scss代码
table.hl {
  margin: 2em 0;
  td.ln {
    text-align: right;
  }
}

li {
  font: {
    family: serif;
    weight: bold;
    size: 1.2em;
  }
}
*/

c)mixin 比变量更有效的东西，甚至可以传参数
/*
@mixin table-base {
  th {
    text-align: center;
    font-weight: bold;
  }
  td, th {padding: 2px}
}

@mixin left($dist) {
  float: left;
  margin-left: $dist;
}

#data {
  @include left(10px);
  @include table-base;
}   
*/

#方法参数还可以指定默认值 
@mixin tab($num,$str:10px){}

d)继承，多用于class
/*
.error {
  border: 1px #f00;
  background: #fdd;
}
.error.intrusion {
  font-size: 1.3em;
  font-weight: bold;
}

.badError {
  @extend .error;
  border-width: 3px;
}    
*/
#对于使用自身的引用可以使用&
a {
    &:hover {
	color:red;
    }
}

e)import,_xxx.scss 类似partial
/* _rounded.scss */
@mixin rounded($side, $radius: 10px) {
  border-#{$side}-radius: $radius;
  -moz-border-radius-#{$side}: $radius;
  -webkit-border-#{$side}-radius: $radius;
}

/* style.scss */
@import "rounded";
#navbar li { @include rounded(top); }
#footer { @include rounded(top, 5px); }
#sidebar { @include rounded(left, 8px); }

f)更多应用
#scss和sass互换#
$ sass-convert style.sass style.scss
$ sass-convert style.scss style.sass
#从scss生成css#
sass input.scss output.css
sass --watch input.scss:output.css #这样可以用观察模式看着css的变化
#更多的详细设置文档：http://sass-lang.com/docs/yardoc/file.SASS_REFERENCE.html#plugin

g)开始用sass，mixin可以用=　代替

css伪类属性选择器
i[class~="icon-"] 正则
i[class="icon-edit"] 确切
父类选择
$a > i[class~="icon-"]  {textdecorator: none} 这个样式作用在a上

属性相等
/* 样式应用与当前 :hover 所在的 li 的 target ID 属性值相等的 p 上 */
li:hover /targetID/ p { border:2px solid #609060;  }

默认选项
  option:default {xxx}

h)让position:fixed 后支持浏览器宽度 定位好某一地方
positicon: fixed
bottom: 0
left: 50% //先把他绝对定位到中间
margin-left: -500px //然后这里就可以调好位置，绝对适应到浏览器变化

